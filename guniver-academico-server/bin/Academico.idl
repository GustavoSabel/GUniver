module academico {

	struct Aluno {
		long codigo;
		string nome;
	};

	struct Disciplina{
		long codigo;
		string nome;
	};

	struct Turma {
		long codigo;
		string nome;
		short ano;
		short semestre;
		Disciplina disciplina;
	};

	struct Matricula {
		Aluno aluno;
		Turma turma;
	};

	struct Prova {
		string descricao;
		Aluno aluno;
		Turma turma;
		float nota;
	};

	struct Ocorrencia {
		string descricao;
	};

	typedef sequence<float> notasAlunos;
	typedef sequence<notasAlunos> notasTurmas;
	typedef sequence<Ocorrencia> ocorrencias;
	typedef sequence<Matricula> matriculas;
	typedef sequence<Disciplina> disciplinas;

	enum SituacaoMatricula { pago, atrazado, a_pagar };

  interface IAcademico {
	  notasAlunos getNotasAluno(in Aluno aluno, in Turma turma);
	  ocorrencias getOcorrencias(in Aluno aluno);
	  Matricula getMatricula(in Aluno aluno, in Disciplina disciplina);
	  matriculas getMatriculas(in Aluno aluno);
	  boolean matricular(in Aluno aluno, in Turma turma, out string mensagemErro);
	  boolean cadastrarTurma(in Turma turma, out string mensagemErro);
	  boolean cadastrarDisciplina(in Disciplina disciplina, out string mensagemErro);
	  boolean cadastrarProva(in Prova prova, out string mensagemErro);
	  boolean getDisciplina(in long codigo, out Disciplina disciplina);
	  disciplinas getDisciplinas();
  };
};
