package academico;


/**
* academico/_IAcademicoStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Academico.idl
* Quarta-feira, 19 de Novembro de 2014 01h23min34s BRST
*/

public class _IAcademicoStub extends org.omg.CORBA.portable.ObjectImpl implements academico.IAcademico
{

  public float[] getNotasAluno (academico.Aluno aluno, academico.Turma turma)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getNotasAluno", true);
                academico.AlunoHelper.write ($out, aluno);
                academico.TurmaHelper.write ($out, turma);
                $in = _invoke ($out);
                float $result[] = academico.notasAlunosHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getNotasAluno (aluno, turma        );
            } finally {
                _releaseReply ($in);
            }
  } // getNotasAluno

  public academico.Ocorrencia[] getOcorrencias (academico.Aluno aluno)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getOcorrencias", true);
                academico.AlunoHelper.write ($out, aluno);
                $in = _invoke ($out);
                academico.Ocorrencia $result[] = academico.ocorrenciasHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getOcorrencias (aluno        );
            } finally {
                _releaseReply ($in);
            }
  } // getOcorrencias

  public academico.Matricula getMatricula (academico.Aluno aluno, academico.Disciplina disciplina)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMatricula", true);
                academico.AlunoHelper.write ($out, aluno);
                academico.DisciplinaHelper.write ($out, disciplina);
                $in = _invoke ($out);
                academico.Matricula $result = academico.MatriculaHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getMatricula (aluno, disciplina        );
            } finally {
                _releaseReply ($in);
            }
  } // getMatricula

  public academico.Matricula[] getMatriculas (academico.Aluno aluno)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMatriculas", true);
                academico.AlunoHelper.write ($out, aluno);
                $in = _invoke ($out);
                academico.Matricula $result[] = academico.matriculasHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getMatriculas (aluno        );
            } finally {
                _releaseReply ($in);
            }
  } // getMatriculas

  public boolean matricular (academico.Aluno aluno, academico.Turma turma, org.omg.CORBA.StringHolder mensagemErro)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("matricular", true);
                academico.AlunoHelper.write ($out, aluno);
                academico.TurmaHelper.write ($out, turma);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                mensagemErro.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return matricular (aluno, turma, mensagemErro        );
            } finally {
                _releaseReply ($in);
            }
  } // matricular

  public boolean cadastrarTurma (academico.Turma turma, org.omg.CORBA.StringHolder mensagemErro)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("cadastrarTurma", true);
                academico.TurmaHelper.write ($out, turma);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                mensagemErro.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return cadastrarTurma (turma, mensagemErro        );
            } finally {
                _releaseReply ($in);
            }
  } // cadastrarTurma

  public boolean cadastrarDisciplina (academico.Disciplina disciplina, org.omg.CORBA.StringHolder mensagemErro)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("cadastrarDisciplina", true);
                academico.DisciplinaHelper.write ($out, disciplina);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                mensagemErro.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return cadastrarDisciplina (disciplina, mensagemErro        );
            } finally {
                _releaseReply ($in);
            }
  } // cadastrarDisciplina

  public boolean cadastrarProva (academico.Prova prova, org.omg.CORBA.StringHolder mensagemErro)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("cadastrarProva", true);
                academico.ProvaHelper.write ($out, prova);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                mensagemErro.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return cadastrarProva (prova, mensagemErro        );
            } finally {
                _releaseReply ($in);
            }
  } // cadastrarProva

  public boolean getDisciplina (int codigo, academico.DisciplinaHolder disciplina)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getDisciplina", true);
                $out.write_long (codigo);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                disciplina.value = academico.DisciplinaHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getDisciplina (codigo, disciplina        );
            } finally {
                _releaseReply ($in);
            }
  } // getDisciplina

  public academico.Disciplina[] getDisciplinas ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getDisciplinas", true);
                $in = _invoke ($out);
                academico.Disciplina $result[] = academico.disciplinasHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getDisciplinas (        );
            } finally {
                _releaseReply ($in);
            }
  } // getDisciplinas

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:academico/IAcademico:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _IAcademicoStub
