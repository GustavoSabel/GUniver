module academico {

	struct Matricula {
		long codigo;
		long codigoAluno;
		long codigoTurma;
	};

	struct Prova {
		long codigo;
		string descricao;
		long codigoAluno;
		long codigoTurma;
		float nota;
	};

	struct Horario {
		long codigo;
		string horario;
		string sala;
	};


	typedef sequence<Horario> horarios;
	typedef sequence<Prova> provas;
	//typedef sequence<notasAlunos> notasTurmas;
	typedef sequence<Matricula> matriculas;
	//typedef sequence<Disciplina> disciplinas;

	//enum SituacaoMatricula { pago, atrazado, a_pagar };

  interface IAcademico {
	  provas getProvasAluno(in long codigoAluno, in long codigoTurma);
	  provas getProvas();
	  matriculas getMatriculasAluno(in long codigoAluno);
	  matriculas getMatriculasTurma(in long codigoTurma);
	  //matriculas getMatriculasSemestre(in long codigoAluno, in short ano, in short semestre);
	  long cadastrarMatricula(in Matricula matricula, out string mensagemErro);
	  horarios getHorarios(in long codigoTurma);
	  //boolean cadastrarTurma(in Turma turma, out string mensagemErro);
	  //boolean cadastrarDisciplina(in Disciplina disciplina, out string mensagemErro);
	  long cadastrarProva(in Prova prova, out string mensagemErro);
	  //boolean getDisciplina(in long codigo, out Disciplina disciplina);
	  //disciplinas getDisciplinas();
  };
};
