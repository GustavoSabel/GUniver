package academico;


/**
* academico/IAcademicoPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Academico.idl
* Sexta-feira, 28 de Novembro de 2014 01h17min25s BRST
*/


//enum SituacaoMatricula { pago, atrazado, a_pagar };
public abstract class IAcademicoPOA extends org.omg.PortableServer.Servant
 implements academico.IAcademicoOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getNotasAluno", new java.lang.Integer (0));
    _methods.put ("getMatricula", new java.lang.Integer (1));
    _methods.put ("getMatriculasAluno", new java.lang.Integer (2));
    _methods.put ("getMatriculasTurma", new java.lang.Integer (3));
    _methods.put ("getMatriculasSemestre", new java.lang.Integer (4));
    _methods.put ("matricular", new java.lang.Integer (5));
    _methods.put ("getHorarios", new java.lang.Integer (6));
    _methods.put ("cadastrarProva", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // academico/IAcademico/getNotasAluno
       {
         academico.Aluno aluno = academico.AlunoHelper.read (in);
         academico.Turma turma = academico.TurmaHelper.read (in);
         academico.Prova $result[] = null;
         $result = this.getNotasAluno (aluno, turma);
         out = $rh.createReply();
         academico.provasHelper.write (out, $result);
         break;
       }

       case 1:  // academico/IAcademico/getMatricula
       {
         academico.Aluno aluno = academico.AlunoHelper.read (in);
         academico.Disciplina disciplina = academico.DisciplinaHelper.read (in);
         academico.Matricula $result = null;
         $result = this.getMatricula (aluno, disciplina);
         out = $rh.createReply();
         academico.MatriculaHelper.write (out, $result);
         break;
       }

       case 2:  // academico/IAcademico/getMatriculasAluno
       {
         academico.Aluno aluno = academico.AlunoHelper.read (in);
         academico.Matricula $result[] = null;
         $result = this.getMatriculasAluno (aluno);
         out = $rh.createReply();
         academico.matriculasHelper.write (out, $result);
         break;
       }

       case 3:  // academico/IAcademico/getMatriculasTurma
       {
         academico.Turma turma = academico.TurmaHelper.read (in);
         academico.Matricula $result[] = null;
         $result = this.getMatriculasTurma (turma);
         out = $rh.createReply();
         academico.matriculasHelper.write (out, $result);
         break;
       }

       case 4:  // academico/IAcademico/getMatriculasSemestre
       {
         academico.Aluno aluno = academico.AlunoHelper.read (in);
         short ano = in.read_short ();
         short semestre = in.read_short ();
         academico.Matricula $result[] = null;
         $result = this.getMatriculasSemestre (aluno, ano, semestre);
         out = $rh.createReply();
         academico.matriculasHelper.write (out, $result);
         break;
       }

       case 5:  // academico/IAcademico/matricular
       {
         academico.Aluno aluno = academico.AlunoHelper.read (in);
         academico.Turma turma = academico.TurmaHelper.read (in);
         org.omg.CORBA.StringHolder mensagemErro = new org.omg.CORBA.StringHolder ();
         boolean $result = false;
         $result = this.matricular (aluno, turma, mensagemErro);
         out = $rh.createReply();
         out.write_boolean ($result);
         out.write_string (mensagemErro.value);
         break;
       }

       case 6:  // academico/IAcademico/getHorarios
       {
         academico.Horario $result[] = null;
         $result = this.getHorarios ();
         out = $rh.createReply();
         academico.horariosHelper.write (out, $result);
         break;
       }


  //boolean cadastrarDisciplina(in Disciplina disciplina, out string mensagemErro);
       case 7:  // academico/IAcademico/cadastrarProva
       {
         academico.Prova prova = academico.ProvaHelper.read (in);
         org.omg.CORBA.StringHolder mensagemErro = new org.omg.CORBA.StringHolder ();
         boolean $result = false;
         $result = this.cadastrarProva (prova, mensagemErro);
         out = $rh.createReply();
         out.write_boolean ($result);
         out.write_string (mensagemErro.value);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:academico/IAcademico:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public IAcademico _this() 
  {
    return IAcademicoHelper.narrow(
    super._this_object());
  }

  public IAcademico _this(org.omg.CORBA.ORB orb) 
  {
    return IAcademicoHelper.narrow(
    super._this_object(orb));
  }


} // class IAcademicoPOA
